{"version":3,"file":"static/js/459.b6ef53e7.chunk.js","mappings":"2NACA,EAA2B,uBAA3B,EAAyD,mBAAzD,EAAwF,wB,SCoCxF,EAhCa,WAEX,IACQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAASO,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASL,WAGlD,CAACH,KAGF,8BACGG,EAAKM,OAAS,GACb,wBACGN,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,cAAeC,EAA3B,EAA2BA,UAAUC,EAArC,EAAqCA,aAArC,OACN,yBACA,iBAAKC,UAAYC,EAAjB,WACQ,gBAAKC,IAAG,UAhBX,mCAgBW,OAAgBH,GAAgBI,IAAKN,KAC7C,cAAGG,UAAWC,EAAd,SAAuBJ,KACvB,eAAGG,UAAWC,EAAd,WAA2B,0CAAyBH,SAJnDF,SAWf,4C,oLChCFQ,EAAU,mC,SAIDC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAWO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,IAIxD,SAASW,EAAUC,GACxB,OAAOX,EAAuB,qDAAD,OAC0BD,EAD1B,kBAC2CY,IAInE,SAASC,EAAgBhC,GAC9B,OAAOoB,EAAuB,sCAAD,OACWpB,EADX,oBAC8BmB,IAItD,SAASb,EAAQN,GACtB,OAAOoB,EAAuB,sCAAD,OACWpB,EADX,4BACsCmB,IAI9D,SAASc,EAAWjC,GACzB,OAAOoB,EAAuB,sCAAD,OACWpB,EADX,4BACsCmB,EADtC","sources":["webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castCard\":\"Cast_castCard__QBNdO\",\"name\":\"Cast_name__y8nr9\",\"character\":\"Cast_character__esJL+\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCast } from '../../services/fetchAPI';\nimport s from './Cast.module.css'\n\nconst Cast = () => {\n\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500';\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    getCast(movieId).then(dataCast => setCast(dataCast.cast));\n    \n    \n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ cast_id, original_name, character,profile_path }) => (\n              <li key={cast_id}>\n              <div className={ s.castCard} >\n                      <img src={`${IMG_PATH}${profile_path}`} alt={original_name}/>\n                      <p className={s.name}>{original_name}</p>\n                      <p className={s.character}><span>Character: </span>{character}</p>          \n                  </div>\n                  \n              </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast find</p>\n      )}\n    </>\n  );\n};\nexport default Cast;","const API_KEY = 'd82e9b87075796c7a6b6bfa80b102f66';\n// const BASE_REQUEST_URL = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n// const TRANDING_REQUEST = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\n// export function getData() {\n//   return fetchWithErrorHandling(`${BASE_REQUEST_URL}`);\n// }\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","getCast","then","dataCast","length","map","cast_id","original_name","character","profile_path","className","s","src","alt","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","findMovie","query","getMovieDetails","getReviews"],"sourceRoot":""}