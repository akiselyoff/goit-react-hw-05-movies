{"version":3,"file":"static/js/866.2dac6876.chunk.js","mappings":"2NACA,EAA6B,4B,SC4B7B,EAxBgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAME,OAJFC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWN,GAASO,MAAK,SAAAC,GAAM,OAAIJ,EAAWI,EAAOC,cACpD,CAACT,KAIE,8BACKG,EAAQO,OAAS,GAClB,wBACKP,EAAQQ,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACb,2BACI,eAAGC,UAAWC,EAAd,qBAAqCH,MACrC,uBAAIC,MAFCF,SAKb,wE,oLCxBNK,EAAU,mC,SAIDC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAWO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,IAIxD,SAASW,EAAUC,GACxB,OAAOX,EAAuB,qDAAD,OAC0BD,EAD1B,kBAC2CY,IAInE,SAASC,EAAgB9B,GAC9B,OAAOkB,EAAuB,sCAAD,OACWlB,EADX,oBAC8BiB,IAItD,SAASc,EAAQ/B,GACtB,OAAOkB,EAAuB,sCAAD,OACWlB,EADX,4BACsCiB,IAI9D,SAASX,EAAWN,GACzB,OAAOkB,EAAuB,sCAAD,OACWlB,EADX,4BACsCiB,EADtC","sources":["webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorName\":\"Reviews_authorName__WCUQp\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviews } from '../../services/fetchAPI';\nimport s from './Reviews.module.css'\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  \n  useEffect(() => {\n    getReviews(movieId).then(review => setReviews(review.results));\n  }, [movieId]);\n\n    return (\n      \n        <>\n            {reviews.length > 0 ? (\n            <ul>\n                {reviews.map(({id, author, content})=> (\n                <li key={id}>\n                    <p className={s.authorName}>Author: {author}</p>\n                    <p>{content}</p>\n                </li>\n      ))}\n    </ul>):(<p>We don`t have any reviews for this movie</p>)}\n        </>\n    \n  );\n};\nexport default Reviews;","const API_KEY = 'd82e9b87075796c7a6b6bfa80b102f66';\n// const BASE_REQUEST_URL = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n// const TRANDING_REQUEST = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\n// export function getData() {\n//   return fetchWithErrorHandling(`${BASE_REQUEST_URL}`);\n// }\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","then","review","results","length","map","id","author","content","className","s","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","findMovie","query","getMovieDetails","getCast"],"sourceRoot":""}