{"version":3,"file":"static/js/944.0e82162f.chunk.js","mappings":"8LAKMA,GAAaC,EAAAA,EAAAA,OAAK,kBAAM,gCAsD9B,UApDoB,WAGhB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAoB/B,OANAC,EAAAA,EAAAA,YAAU,WACDF,IACLG,EAAAA,EAAAA,IAAUH,GAAOI,MAAK,SAAAT,GAAM,OAAIC,EAAUD,EAAOU,cACpD,CAACL,KAIE,iCACF,kBAAMM,SAdO,SAAAC,GACbA,EAAEC,iBACFT,EAAgB,CAAEC,MAAOP,EAAYgB,cAAcC,SACnDH,EAAEI,cAAcC,MAAQ,IAWxB,WACE,kBACEC,SArBW,SAAAN,GAChBb,EAAea,EAAEI,cAAcC,QAqB1BA,MAAOnB,EACPqB,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,sBAEd,mBAAQH,KAAK,SAAb,UACE,2CAGF,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,SACGzB,EAAO0B,OAAS,IAAK,SAAC/B,EAAD,CAAYK,OAAQA,W,oLClD9C2B,EAAU,mC,SAIDC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAWO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,IAIxD,SAASnB,EAAUH,GACxB,OAAOuB,EAAuB,qDAAD,OAC0BD,EAD1B,kBAC2CtB,IAInE,SAASiC,EAAgBC,GAC9B,OAAOX,EAAuB,sCAAD,OACWW,EADX,oBAC8BZ,IAItD,SAASa,EAAQD,GACtB,OAAOX,EAAuB,sCAAD,OACWW,EADX,4BACsCZ,IAI9D,SAASc,EAAWF,GACzB,OAAOX,EAAuB,sCAAD,OACWW,EADX,4BACsCZ,EADtC","sources":["pages/SearchMovie.jsx","services/fetchAPI.js"],"sourcesContent":["import { useState, useEffect, lazy, Suspense } from 'react'\nimport { useSearchParams } from \"react-router-dom\";\nimport { findMovie } from '../services/fetchAPI';\n\n\nconst MoviesList = lazy(() => import('./MoviesList'));\n\nconst SearchMovie = () => {\n\n\n    const [searchQuery, setSearchQuery] = useState('');\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get(\"query\");\n    \n\n    const onChange = e => {\n     setSearchQuery(e.currentTarget.value);\n     \n    };\n    \n  const onSubmit = e => {\n      e.preventDefault();\n      setSearchParams({ query: searchQuery.toLowerCase().trim() });\n      e.currentTarget.value = '';\n  };\n\n    useEffect(() => {\n        if (!query) return;\n        findMovie(query).then(movies => setMovies(movies.results));     \n  }, [query]);\n\n    \n    return (\n        <>\n      <form onSubmit={onSubmit}>\n        <input\n          onChange={onChange}\n          value={searchQuery}\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie name\"\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n        </form>\n        <Suspense fallback={<div>Loading...</div>}>\n          {movies.length > 0 && <MoviesList movies={movies} />}\n       </Suspense>\n\n      \n    </>\n\n    )\n}\n\nexport default SearchMovie;","const API_KEY = 'd82e9b87075796c7a6b6bfa80b102f66';\n// const BASE_REQUEST_URL = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n// const TRANDING_REQUEST = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\n// export function getData() {\n//   return fetchWithErrorHandling(`${BASE_REQUEST_URL}`);\n// }\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["MoviesList","lazy","useState","searchQuery","setSearchQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","findMovie","then","results","onSubmit","e","preventDefault","toLowerCase","trim","currentTarget","value","onChange","name","type","autoComplete","autoFocus","placeholder","Suspense","fallback","length","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","getMovieDetails","movieId","getCast","getReviews"],"sourceRoot":""}