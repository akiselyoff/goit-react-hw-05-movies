{"version":3,"file":"static/js/135.3366f1b9.chunk.js","mappings":"6OACA,EAA2B,+BAA3B,EAA8E,wCAA9E,EAAwI,sCAAxI,EAAiM,uCAAjM,EAA2P,uCAA3P,EAA4S,8B,SC+D5S,EA1DqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAG7CC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBV,GAASW,KAAKP,KAC/B,CAACJ,IAIF,IACMY,EAAyCT,EAAzCS,MAAOC,EAAkCV,EAAlCU,YAAaC,EAAqBX,EAArBW,SAAUC,EAAWZ,EAAXY,OAGtC,OACE,iCACE,SAAC,KAAD,CAAMC,UAAWC,EAAYC,GAAIb,EAAjC,UAA+C,iBAAKW,UAAWC,EAAhB,WAAqC,2BAAO,SAAC,MAAD,OAA8B,iBAAMD,UAAWC,EAAjB,2BAErH,iBAAKD,UAAWC,EAAhB,WACI,gBAAKE,IAAG,UATD,mCASC,OAAgBN,GACjBO,IAAG,oBAAeR,MAEzB,iBAAKI,UAAWC,EAAhB,WACJ,wBAAKL,KAET,cAAGI,UAAWC,EAAd,uBACI,uBAAIH,KACJ,cAAGE,UAAWC,EAAd,oBACEF,GAAUA,EAAOM,KAAI,SAAEC,GAAF,OAAaA,EAAMC,QAAMC,KAAK,aAOzD,4BACG,cAAGR,UAAWC,EAAd,qCACK,wBACG,SAAC,KAAD,CAAMC,GAAE,OAAR,qBAEH,wBACI,SAAC,KAAD,CAAMA,GAAE,UAAR,wBAGR,SAAC,KAAD,Y,oLCrDJO,EAAU,mC,SAIDC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,yGAAsCC,EAAtC,+BAA4C,GAA5C,SACyBC,MAAMD,GAD/B,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAWO,SAASC,IACd,OAAOT,EAAuB,2DAAD,OACgCD,IAIxD,SAASW,EAAUC,GACxB,OAAOX,EAAuB,qDAAD,OAC0BD,EAD1B,kBAC2CY,IAInE,SAAS3B,EAAgBV,GAC9B,OAAO0B,EAAuB,sCAAD,OACW1B,EADX,oBAC8ByB,IAItD,SAASa,EAAQtC,GACtB,OAAO0B,EAAuB,sCAAD,OACW1B,EADX,4BACsCyB,IAI9D,SAASc,EAAWvC,GACzB,OAAO0B,EAAuB,sCAAD,OACW1B,EADX,4BACsCyB,EADtC","sources":["webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/fetchAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__dzd-p\",\"backLinkContainer\":\"MovieDetails_backLinkContainer__5vYXR\",\"backLinkCapture\":\"MovieDetails_backLinkCapture__dw+TZ\",\"movieDetailsCard\":\"MovieDetails_movieDetailsCard__dPQmi\",\"movieDetailsInfo\":\"MovieDetails_movieDetailsInfo__KY5s2\",\"capture\":\"MovieDetails_capture__aaPFh\"};","import { getMovieDetails } from '../../services/fetchAPI';\nimport { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  \n\n  useEffect(() => {\n      getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n  \n  \n\n    const IMG_PATH = 'https://image.tmdb.org/t/p/w500';\n  const { title, poster_path, overview, genres } = movie;\n\n\n  return (\n    <>\n      <Link className={s.backLink} to={backLinkHref}><div className={s.backLinkContainer}><span>{<AiOutlineArrowLeft />}</span><span className={s.backLinkCapture}>Go Back</span></div></Link>\n          \n          <div className={s.movieDetailsCard}>\n              <img src={`${IMG_PATH}${poster_path}`}\n                     alt={`Poster to ${title}`}  \n              />\n              <div className={s.movieDetailsInfo}>\n          <h1>{title}</h1>\n          \n      <p className={s.capture}>Overview</p>\n          <p>{overview}</p>\n          <p className={s.capture}>Genres</p>\n           {genres && genres.map(( genre ) => genre.name).join(', ')}\n               \n               \n      \n              </div>\n              \n          </div>\n      <div>\n         <p className={s.capture}>Additional information</p>\n              <p>\n                 <Link to={`cast`}>Cast</Link>\n              </p>\n              <p>\n                  <Link to={`reviews`}>Reviews</Link>\n        </p>\n        \n          <Outlet />\n         \n              \n          </div>\n      \n      \n        \n      \n    </>\n  );\n};\nexport default MovieDetails;","const API_KEY = 'd82e9b87075796c7a6b6bfa80b102f66';\n// const BASE_REQUEST_URL = `https://api.themoviedb.org/3/movie/550?api_key=${API_KEY}`;\n// const TRANDING_REQUEST = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\nasync function fetchWithErrorHandling(url = '') {\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not Found'));\n}\n\n// export function getData() {\n//   return fetchWithErrorHandling(`${BASE_REQUEST_URL}`);\n// }\n\nexport function getTrandingMovie() {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function findMovie(query) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n}\n\nexport function getMovieDetails(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\n\nexport function getCast(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\n\nexport function getReviews(movieId) {\n  return fetchWithErrorHandling(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`\n  );\n}\n"],"names":["movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","then","title","poster_path","overview","genres","className","s","to","src","alt","map","genre","name","join","API_KEY","fetchWithErrorHandling","url","fetch","response","ok","json","Promise","reject","Error","getTrandingMovie","findMovie","query","getCast","getReviews"],"sourceRoot":""}